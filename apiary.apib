FORMAT: 1A
HOST: http://mymovie-api.maungawhau.net.nz/api/v1

# MyMovie

MyMovie is a web app for adding movies to a watchlist.
The server-side API provides endpoints for manipulating the items in a
watchlist - which is a list of associations between the user, a movie,
and what notifications they wish to receive.

Actions on users will be very minimal, and authentication will be via
social networks. Once authenticated with a social network the system will
retrieve and use name and avatar from the network.

The frontend UI is expected to search for movies directly on 3rd party services,
and use the movie ID when creating the watch list.

# Group Configuration

Resource with configuration data for the client,
such as
- notification types
- client id for social network auth

## Configuration [/config]

### Retrieve [GET]

+ Response 200 (application/json)


# Group Users and Authentication

Resources related to users of the system.

Login relies on authorising with a social network, and passing back
a token to use to get user details.

The system will return a JWT token, which must be passed back in an
Authorization header.


## Social Authentication [/auth/register-by-token/:social?access_token=:token]

Authentication using a trusted 3rd-party social service.

After the front end performs a login with a social service, it passes the token to the server
which registers the user in our system, exchanges the token for another token, and returns
our JWT token to the client.

+ Parameters
    + social: google-plus (string) - Name of the social service providing the authentication.
    + token: ya29.kQG0dHTiKO9 (string) - Access token from social service

### Login [GET]

+ Response 200 (application/json)

        {
            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE",
            "user": {
                "last_name": "Mitchell",
                "avatar": "https://lh4.googleusercontent.com/-GorsEw8ovpc/AAAAAAAAAAI/AAAAAAAAAcw/wgKJc5pcZgo/photo.jpg?sz=50",
                "first_name": "James",
                "is_staff": true,
                "name": "James Mitchell",
                "last_login": "2015-06-13T01:08:29.151Z",
                "id": 1,
                "email": "james@mailinator.com"
            }
        }

## Username and Password Authentication [/auth/login]

Authentication using a local username and password, local to the server.

The normal UX will be to use social authentication, but this is available for access as a local admin or test user.

### Login [POST]

+ Request (application/json)

        {
            "username": "test@example.com",
            "password": "password"
        }

+ Response 200 (application/json)

        {
            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE"
        }

## Users [/users/me]

User details.

### Retrieve [GET]

+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

+ Response 200 (application/json)

        {
            "id": 1,
            "email": "james@mailinator.com",
            "first_name": "James",
            "last_name": "Mitchell",
            "full_name": "James Mitchell",
            "avatar": "https://lh4.googleusercontent.com/-GorsEw8ovpc/AAAAAAAAAAI/AAAAAAAAAcw/wgKJc5pcZgo/photo.jpg?sz=50"
        }


# Group Movies and Watchlists

## Movie [/movies/{id}]

Resource for a movie.

**Note**: this is where a search endpoint would allow us to search and add
movies from the client - but we want search to use a 3rd party API, and to just
tell us what the movie details are.


+ Parameters
    + id: 1 (number) - Unique identifier for a movie

+ Model (application/json)

        {
            "id": 1,
            "name": "Star Trek",
            "poster": "http://ia.media-imdb.com/images/M/MV5BMjE5NDQ5OTE4Ml5BMl5BanBnXkFtZTcwOTE3NDIzMw@@._V1_SX300.jpg"
            "year": 2009,
            "services":
                [
                    {
                        "id": 6,
                        "service": "omdb",
                        "service_id": "tt0796366",
                        "updated": "2015-02-24",
                        "service_data":
                            {
                                "Title": "Star Trek",
                                "Year": "2009",
                                "Rated": "PG-13",
                                "Released": "08 May 2009",
                                "Runtime": "127 min",
                                "Genre": "Action, Adventure, Sci-Fi",
                                "Director": "J.J. Abrams",
                                "Writer": "Roberto Orci, Alex Kurtzman, Gene Roddenberry (television series \"Star Trek\")",
                                "Actors": "Chris Pine, Zachary Quinto, Leonard Nimoy, Eric Bana",
                                "Plot": "The brash James T. Kirk tries to live up to his father's legacy with Mr. Spock keeping him in check as a vengeful, time-traveling Romulan creates black holes to destroy the Federation one planet at a time.",
                                "Language": "English",
                                "Country": "USA, Germany",
                                "Awards": "Won 1 Oscar. Another 23 wins & 67 nominations.",
                                "Poster": "http://ia.media-imdb.com/images/M/MV5BMjE5NDQ5OTE4Ml5BMl5BanBnXkFtZTcwOTE3NDIzMw@@._V1_SX300.jpg",
                                "Metascore": "83",
                                "imdbRating": "8.0",
                                "imdbVotes": "461,579",
                                "imdbID": "tt0796366",
                                "Type": "movie",
                                "tomatoMeter": "95",
                                "tomatoImage": "certified",
                                "tomatoRating": "8.2",
                                "tomatoReviews": "328",
                                "tomatoFresh": "311",
                                "tomatoRotten": "17",
                                "tomatoConsensus": "Star Trek reignites a classic franchise with action, humor, a strong story, and brilliant visuals, and will please traditional Trekkies and new fans alike.",
                                "tomatoUserMeter": "91",
                                "tomatoUserRating": "4.1",
                                "tomatoUserReviews": "741824",
                                "DVD": "17 Nov 2009",
                                "BoxOffice": "$257.7M",
                                "Production": "Paramount Pictures",
                                "Website": "http://www.startrekmovie.com/",
                                "Response": "True"
                            }
                    }
                ]

        }

### Retrieve [GET]

+ Response 200

    [Movie][]


## Watchlist Collection [/watchlists]

Resource for a list of user watchlists.

+ Model

        [
            {
                "id": 1,
                "movie":
                    {
                        "id": 1,
                        "name": "Star Trek",
                        "poster": "http://ia.media-imdb.com/images/M/MV5BMjE5NDQ5OTE4Ml5BMl5BanBnXkFtZTcwOTE3NDIzMw@@._V1_SX300.jpg"
                        "year": 2009,
                        "services":
                            [
                                {...}
                            ]
                    },
                "notifications":
                    [
                        {
                            "id": 1,
                            "type": 0,
                            "watchlist": 1,
                            "notified": false,
                            "notified_date": ""
                        }
                    ]
            }
        ]

### List [GET]

+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

+ Response 200
       [Watchlist Collection][]


### Create [POST]


+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

    + Body

            {
                "moviename": "Star Trek",
                "service": "omdb",
                "service_id": "tt0796366"
                "notifywhen":
                    [
                        0, 2, 3
                    ]
            }

+ Response 201

    [Watchlist][]


## Watchlist [/watchlists/{id}]

Resource for watchlists.

+ Parameter
    + id: 1 (number) - Unique identifier for a watchlist

+ Model (application/json)

        {
            "id": 1,
            "movie":
                {
                    "id": 1,
                    "name": "Star Trek",
                    "poster": "http://ia.media-imdb.com/images/M/MV5BMjE5NDQ5OTE4Ml5BMl5BanBnXkFtZTcwOTE3NDIzMw@@._V1_SX300.jpg"
                    "year": 2009,
                    "services":
                        [
                            {...}
                        ]
                },
            "notifications":
                [
                    {
                        "id": 1,
                        "type": 0,
                        "watchlist": 1,
                        "notified": false,
                        "notified_date": ""
                    }
                ]
        }

### Retrieve [GET]

+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

+ Response 200

    [Watchlist][]

### Update [PUT]

+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

+ Response 200

    [Watchlist][]


### Delete [DELETE]

+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE


+ Response 204 (application/json)


## Notification Collection [/watchlists/{list_id}/notifications]

Resource for a list of notifications on a watchlist.

+ Parameters
    + list_id: 1 (number) - Unique identifier for the watchlist

+ Model (application/json)

        [
            {
                "id": 1,
                "type": 1,
                "notified": false,
                "notified_date": null,
                "watchlist": 3
            }
        ]


### Create [POST]


+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

    + Body

            {
                "type": 1
            }

+ Response 201

    [Notification][]

### List [GET]

+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

+ Response 200

    [Notification Collection][]


## Notification [/watchlists/{list_id}/notifications/{id}]

+ Parameters
    + id: 1 (number) - Unique identifier for a notification
    + list_id: 1 (number) - Unique identifier for the watchlist

+ Model (application/json)

        {
            "id": 1,
            "type": 1,
            "notified": false,
            "notified_date": null,
            "watchlist": 3
        }

### Retrieve [GET]

+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

+ Response 200

    [Notification][]


### Update [PUT]

+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

+ Response 200

    [Notification][]

### Delete [DELETE]

+ Request (application/json)

    + Headers

            Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmlnX2lhdCI6MTQzNDE1NzcwOSwidXNlcl9pZCI6MSwidXNlcm5hbWUiOiJqYW1lcyIsImVtYWlsIjoiamFtZXNAbWFpbGluYXRvci5jb20iLCJleHAiOjE0MzQxNzIxMDl9.WUv4q-HvrYRWmp60U3UtTgc11wNOaC4iSUnXYsda4YE

+ Response 204 (application/json)
